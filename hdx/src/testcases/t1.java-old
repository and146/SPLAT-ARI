import uk.ac.starlink.hdx.*;

import java.io.*;

import org.dom4j.Namespace;
import org.dom4j.io.SAXReader;
import org.dom4j.io.XMLWriter;

class t1 {
    public static void main (String argv[]) {
	if (argv.length < 1) {
	    System.err.println ("Too few arguments");
	    System.exit (1);
	}

	org.dom4j.DocumentFactory ourFactory
	    = new org.dom4j.DocumentFactory();
	SAXReader r;
	org.dom4j.Document JDom;
	org.dom4j.io.DOMWriter JDomWriter = new org.dom4j.io.DOMWriter();;
	org.w3c.dom.Document w3cDom;

	int exitstatus = 0;

	for (int i=0; i<argv.length; i++) {
	    try {
		r = new SAXReader(ourFactory);
		r.setValidation(false);
		r.setIncludeExternalDTDDeclarations(false);
		
		File f = new File(argv[i]);
		JDom = r.read(f);
		w3cDom = JDomWriter.write(JDom);

		NdxImpl ndx = new NdxImpl (w3cDom.getDocumentElement());

		System.out.println ("File " + argv[i] + ":");
		NDArray arr = ndx.getImage();
		System.out.println ("  Data: "
				    + (arr == null ? "<null>" : arr.toString()));
		arr = ndx.getVariance();
		System.out.println ("  Variance: "
				    + (arr == null ? "<null>" : arr.toString()));
		arr = ndx.getQuality();
		System.out.println ("  Quality: "
				    + (arr == null ? "<null>" : arr.toString()));
	    } catch (org.dom4j.DocumentException e) {
		System.err.println("IO error processing file " + argv[i]
				   + " (" + e + ")");
		exitstatus = 1;
	    } catch (java.net.MalformedURLException e) {
		System.err.println("Malformed URL processing file " + argv[i]
				   + " (" + e + ")");
		exitstatus = 1;
	    } catch (uk.ac.starlink.hdx.NdxException e) {
		System.err.println("Error constructing NdxImpl.  File "
				   + argv[i]
				   + " (" + e + ")");
		exitstatus = 1;
	    }
	}
    }
}
