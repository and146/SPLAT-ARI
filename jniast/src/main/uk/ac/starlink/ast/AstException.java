
/* ******************************************************************
 *                         DO NOT EDIT!                             *
 *       This file is autogenerated from AstException.pl            *
 *               and built under Ant control                        *
 ********************************************************************/


package uk.ac.starlink.ast;

/**
 * Thrown to indicate that there has been an AST error of some description.
 * If a call to the underlying AST library occurs results in a non-zero
 * status value, an AstException is thrown.  By calling <code>getStatus</code>
 * on this exception and comparing it with one of the 
 * <code>static final int</code> fields (constants) defined by this class, 
 * it is possible to find out exactly what went wrong.
 * In a few cases an AstException may be thrown by parts of
 * the Java uk.ac.starlink.ast system not provided by the underlying AST 
 * library - in this case the status will be equal to <code>SAI__ERROR</code>.
 *
 * @author  Mark Taylor (Starlink)
 */
public class AstException extends RuntimeException {
    private int status;

    /**
     * Construct an AstException.
     *
     * @param  message  an explanatory message
     */
    public AstException( String message ) {
        this( message, SAI__ERROR );
    }

    /**
     * Construct an AstException with a given status value.
     *
     * @param  msgText  an explanatory message
     * @param  status   the numerical status value
     */
    public AstException( String msgText, int status ) {
        super( msgText + " (" + getErrName( status ) + ")" );
        this.status = status;
    }

    /**
     * Get the status value corresponding to this exception.  This ought
     * to correspond to the value of one of this class's static 
     * final member fields.
     *
     * @return  the error status value
     */
    public int getStatus() {
        return status;
    }

    /**
     * Get the symbolic name corresponding to this exception's status value.
     * This ought to correspond to the name of one of this class's 
     * static final memeber fields.
     *
     * @return  the error status name
     */
    public String getStatusName() {
        return getErrName( status );
    }

    /**
     * Gets the error value for a named constant.
     *
     * @param  name of the error constant
     * @return error number
     * @throws IllegalArgumentException  if no error of that name exists
     */
    private native static int getErrConst( String ident );

    /**
     * Returns the name of the string that corresponds to a given
     * integer status code.  For instance getStatusName(0)=="SAI__OK".
     *
     * @param  code
     * @return symbolic name for error status <code>code</code>
     */
    private native static String getErrName( int code );

    /**
     * Status constant for no error.  
     * This value should never be used as the status of an AstException.
     */
    public static final int SAI__OK = getErrConst( "SAI__OK" );

    /**
     * Status constant for unknown error. 
     * This value may be used as the status of an AstException where no
     * value defined in the underlying library is appropriate.
     */
    public static final int SAI__ERROR = getErrConst( "SAI__ERROR" );

   /** Status constant for error "attribute getting error" */
   public static final int AST__ATGER;
   static {
       try { AST__ATGER = getErrConst( "AST__ATGER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ATGER" );
       }
   }
   /** Status constant for error "attribute setting error" */
   public static final int AST__ATSER;
   static {
       try { AST__ATSER = getErrConst( "AST__ATSER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ATSER" );
       }
   }
   /** Status constant for error "attribute value invalid" */
   public static final int AST__ATTIN;
   static {
       try { AST__ATTIN = getErrConst( "AST__ATTIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ATTIN" );
       }
   }
   /** Status constant for error "axis index invalid" */
   public static final int AST__AXIIN;
   static {
       try { AST__AXIIN = getErrConst( "AST__AXIIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__AXIIN" );
       }
   }
   /** Status constant for error "bad attribute name" */
   public static final int AST__BADAT;
   static {
       try { AST__BADAT = getErrConst( "AST__BADAT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADAT" );
       }
   }
   /** Status constant for error "zero-sized box given" */
   public static final int AST__BADBX;
   static {
       try { AST__BADBX = getErrConst( "AST__BADBX" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADBX" );
       }
   }
   /** Status constant for error "bad input data" */
   public static final int AST__BADIN;
   static {
       try { AST__BADIN = getErrConst( "AST__BADIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADIN" );
       }
   }
   /** Status constant for error "bad number of input coordinates" */
   public static final int AST__BADNI;
   static {
       try { AST__BADNI = getErrConst( "AST__BADNI" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADNI" );
       }
   }
   /** Status constant for error "bad number of output coordinates" */
   public static final int AST__BADNO;
   static {
       try { AST__BADNO = getErrConst( "AST__BADNO" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADNO" );
       }
   }
   /** Status constant for error "PolyMap contains illegal power value" */
   public static final int AST__BADPW;
   static {
       try { AST__BADPW = getErrConst( "AST__BADPW" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADPW" );
       }
   }
   /** Status constant for error "ShiftMap contains no shift information" */
   public static final int AST__BADSM;
   static {
       try { AST__BADSM = getErrConst( "AST__BADSM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADSM" );
       }
   }
   /** Status constant for error "WinMap contains no bounds information" */
   public static final int AST__BADWM;
   static {
       try { AST__BADWM = getErrConst( "AST__BADWM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADWM" );
       }
   }
   /** Status constant for error "bad break index" */
   public static final int AST__BDBRK;
   static {
       try { AST__BDBRK = getErrConst( "AST__BDBRK" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BDBRK" );
       }
   }
   /** Status constant for error "bad field specifier" */
   public static final int AST__BDFMT;
   static {
       try { AST__BDFMT = getErrConst( "AST__BDFMT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BDFMT" );
       }
   }
   /** Status constant for error "invalid FITS keyword value found" */
   public static final int AST__BDFTS;
   static {
       try { AST__BDFTS = getErrConst( "AST__BDFTS" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BDFTS" );
       }
   }
   /** Status constant for error "inappropriate Object supplied" */
   public static final int AST__BDOBJ;
   static {
       try { AST__BDOBJ = getErrConst( "AST__BDOBJ" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BDOBJ" );
       }
   }
   /** Status constant for error "wrong number of clipping axes" */
   public static final int AST__CLPAX;
   static {
       try { AST__CLPAX = getErrConst( "AST__CLPAX" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__CLPAX" );
       }
   }
   /** Status constant for error "range of coordinates invalid" */
   public static final int AST__CORNG;
   static {
       try { AST__CORNG = getErrConst( "AST__CORNG" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__CORNG" );
       }
   }
   /** Status constant for error "too many breaks in a curve" */
   public static final int AST__CVBRK;
   static {
       try { AST__CVBRK = getErrConst( "AST__CVBRK" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__CVBRK" );
       }
   }
   /** Status constant for error "array dimensions invalid" */
   public static final int AST__DIMIN;
   static {
       try { AST__DIMIN = getErrConst( "AST__DIMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__DIMIN" );
       }
   }
   /** Status constant for error "date/time error" */
   public static final int AST__DTERR;
   static {
       try { AST__DTERR = getErrConst( "AST__DTERR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__DTERR" );
       }
   }
   /** Status constant for error "invalid use of astEnd" */
   public static final int AST__ENDIN;
   static {
       try { AST__ENDIN = getErrConst( "AST__ENDIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ENDIN" );
       }
   }
   /** Status constant for error "end of input Channel encountered" */
   public static final int AST__EOCHN;
   static {
       try { AST__EOCHN = getErrConst( "AST__EOCHN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__EOCHN" );
       }
   }
   /** Status constant for error "attempt to export Object pointer from level zero" */
   public static final int AST__EXPIN;
   static {
       try { AST__EXPIN = getErrConst( "AST__EXPIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__EXPIN" );
       }
   }
   /** Status constant for error "corrupted FitsChan supplied" */
   public static final int AST__FCRPT;
   static {
       try { AST__FCRPT = getErrConst( "AST__FCRPT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__FCRPT" );
       }
   }
   /** Status constant for error "error while formatting coordinate value" */
   public static final int AST__FMTER;
   static {
       try { AST__FMTER = getErrConst( "AST__FMTER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__FMTER" );
       }
   }
   /** Status constant for error "Frame index invalid" */
   public static final int AST__FRMIN;
   static {
       try { AST__FRMIN = getErrConst( "AST__FRMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__FRMIN" );
       }
   }
   /** Status constant for error "FrameSet invalid" */
   public static final int AST__FRSIN;
   static {
       try { AST__FRSIN = getErrConst( "AST__FRSIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__FRSIN" );
       }
   }
   /** Status constant for error "cannot convert FITS data value type" */
   public static final int AST__FTCNV;
   static {
       try { AST__FTCNV = getErrConst( "AST__FTCNV" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__FTCNV" );
       }
   }
   /** Status constant for error "low level graphics error" */
   public static final int AST__GRFER;
   static {
       try { AST__GRFER = getErrConst( "AST__GRFER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__GRFER" );
       }
   }
   /** Status constant for error "invalid Handle" */
   public static final int AST__INHAN;
   static {
       try { AST__INHAN = getErrConst( "AST__INHAN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__INHAN" );
       }
   }
   /** Status constant for error "incompatible numbers of coordinates" */
   public static final int AST__INNCO;
   static {
       try { AST__INNCO = getErrConst( "AST__INNCO" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__INNCO" );
       }
   }
   /** Status constant for error "internal programming error" */
   public static final int AST__INTER;
   static {
       try { AST__INTER = getErrConst( "AST__INTER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__INTER" );
       }
   }
   /** Status constant for error "incompatible transformation directions" */
   public static final int AST__INTRD;
   static {
       try { AST__INTRD = getErrConst( "AST__INTRD" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__INTRD" );
       }
   }
   /** Status constant for error "circular dependency between KeyMaps" */
   public static final int AST__KYCIR;
   static {
       try { AST__KYCIR = getErrConst( "AST__KYCIR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__KYCIR" );
       }
   }
   /** Status constant for error "class loader error" */
   public static final int AST__LDERR;
   static {
       try { AST__LDERR = getErrConst( "AST__LDERR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__LDERR" );
       }
   }
   /** Status constant for error "invalid lookup table increment" */
   public static final int AST__LUTII;
   static {
       try { AST__LUTII = getErrConst( "AST__LUTII" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__LUTII" );
       }
   }
   /** Status constant for error "invalid number of lookup table elements" */
   public static final int AST__LUTIN;
   static {
       try { AST__LUTIN = getErrConst( "AST__LUTIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__LUTIN" );
       }
   }
   /** Status constant for error "requested memory size invalid" */
   public static final int AST__MEMIN;
   static {
       try { AST__MEMIN = getErrConst( "AST__MEMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MEMIN" );
       }
   }
   /** Status constant for error "not a 2d or 3d MatrixMap" */
   public static final int AST__MTR23;
   static {
       try { AST__MTR23 = getErrConst( "AST__MTR23" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MTR23" );
       }
   }
   /** Status constant for error "null rotation axis supplied" */
   public static final int AST__MTRAX;
   static {
       try { AST__MTRAX = getErrConst( "AST__MTRAX" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MTRAX" );
       }
   }
   /** Status constant for error "bad matrix shapes for multiplication" */
   public static final int AST__MTRML;
   static {
       try { AST__MTRML = getErrConst( "AST__MTRML" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MTRML" );
       }
   }
   /** Status constant for error "null matrix supplied" */
   public static final int AST__MTRMT;
   static {
       try { AST__MTRMT = getErrConst( "AST__MTRMT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MTRMT" );
       }
   }
   /** Status constant for error "number of axes invalid" */
   public static final int AST__NAXIN;
   static {
       try { AST__NAXIN = getErrConst( "AST__NAXIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NAXIN" );
       }
   }
   /** Status constant for error "number of characters invalid" */
   public static final int AST__NCHIN;
   static {
       try { AST__NCHIN = getErrConst( "AST__NCHIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NCHIN" );
       }
   }
   /** Status constant for error "number of coordinates invalid" */
   public static final int AST__NCOIN;
   static {
       try { AST__NCOIN = getErrConst( "AST__NCOIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NCOIN" );
       }
   }
   /** Status constant for error "number of coordinates per point invalid" */
   public static final int AST__NCPIN;
   static {
       try { AST__NCPIN = getErrConst( "AST__NCPIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NCPIN" );
       }
   }
   /** Status constant for error "number of array elements invalid" */
   public static final int AST__NELIN;
   static {
       try { AST__NELIN = getErrConst( "AST__NELIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NELIN" );
       }
   }
   /** Status constant for error "number of output coordinates too small" */
   public static final int AST__NOCTS;
   static {
       try { AST__NOCTS = getErrConst( "AST__NOCTS" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOCTS" );
       }
   }
   /** Status constant for error "transformation not defined" */
   public static final int AST__NODEF;
   static {
       try { AST__NODEF = getErrConst( "AST__NODEF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NODEF" );
       }
   }
   /** Status constant for error "required FITS keywords missing" */
   public static final int AST__NOFTS;
   static {
       try { AST__NOFTS = getErrConst( "AST__NOFTS" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOFTS" );
       }
   }
   /** Status constant for error "unable to allocate memory" */
   public static final int AST__NOMEM;
   static {
       try { AST__NOMEM = getErrConst( "AST__NOMEM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOMEM" );
       }
   }
   /** Status constant for error "number of output points too small" */
   public static final int AST__NOPTS;
   static {
       try { AST__NOPTS = getErrConst( "AST__NOPTS" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOPTS" );
       }
   }
   /** Status constant for error "attribute is read-only" */
   public static final int AST__NOWRT;
   static {
       try { AST__NOWRT = getErrConst( "AST__NOWRT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOWRT" );
       }
   }
   /** Status constant for error "number of points invalid" */
   public static final int AST__NPTIN;
   static {
       try { AST__NPTIN = getErrConst( "AST__NPTIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NPTIN" );
       }
   }
   /** Status constant for error "Object invalid" */
   public static final int AST__OBJIN;
   static {
       try { AST__OBJIN = getErrConst( "AST__OBJIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__OBJIN" );
       }
   }
   /** Status constant for error "invalid Plot option" */
   public static final int AST__OPT;
   static {
       try { AST__OPT = getErrConst( "AST__OPT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__OPT" );
       }
   }
   /** Status constant for error "points data structure invalid" */
   public static final int AST__PDSIN;
   static {
       try { AST__PDSIN = getErrConst( "AST__PDSIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PDSIN" );
       }
   }
   /** Status constant for error "no numerical labels can be produced" */
   public static final int AST__PLFMT;
   static {
       try { AST__PLFMT = getErrConst( "AST__PLFMT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PLFMT" );
       }
   }
   /** Status constant for error "permutation invalid" */
   public static final int AST__PRMIN;
   static {
       try { AST__PRMIN = getErrConst( "AST__PRMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PRMIN" );
       }
   }
   /** Status constant for error "pointer invalid" */
   public static final int AST__PTRIN;
   static {
       try { AST__PTRIN = getErrConst( "AST__PTRIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PTRIN" );
       }
   }
   /** Status constant for error "range of points invalid" */
   public static final int AST__PTRNG;
   static {
       try { AST__PTRNG = getErrConst( "AST__PTRNG" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PTRNG" );
       }
   }
   /** Status constant for error "read error" */
   public static final int AST__RDERR;
   static {
       try { AST__RDERR = getErrConst( "AST__RDERR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__RDERR" );
       }
   }
   /** Status constant for error "invalid or corrupted Region structure supplied" */
   public static final int AST__REGIN;
   static {
       try { AST__REGIN = getErrConst( "AST__REGIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__REGIN" );
       }
   }
   /** Status constant for error "invalid attempt to remove last Frame" */
   public static final int AST__REMIN;
   static {
       try { AST__REMIN = getErrConst( "AST__REMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__REMIN" );
       }
   }
   /** Status constant for error "sky coordinate system invalid" */
   public static final int AST__SCSIN;
   static {
       try { AST__SCSIN = getErrConst( "AST__SCSIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__SCSIN" );
       }
   }
   /** Status constant for error "axis selection invalid" */
   public static final int AST__SELIN;
   static {
       try { AST__SELIN = getErrConst( "AST__SELIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__SELIN" );
       }
   }
   /** Status constant for error "bad SLALIB transformation type" */
   public static final int AST__SLAIN;
   static {
       try { AST__SLAIN = getErrConst( "AST__SLAIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__SLAIN" );
       }
   }
   /** Status constant for error "coordinate transformation not defined" */
   public static final int AST__TRNND;
   static {
       try { AST__TRNND = getErrConst( "AST__TRNND" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__TRNND" );
       }
   }
   /** Status constant for error "unmatched quotes" */
   public static final int AST__UNMQT;
   static {
       try { AST__UNMQT = getErrConst( "AST__UNMQT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__UNMQT" );
       }
   }
   /** Status constant for error "valid area too small" */
   public static final int AST__VSMAL;
   static {
       try { AST__VSMAL = getErrConst( "AST__VSMAL" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__VSMAL" );
       }
   }
   /** Status constant for error "non-existent longitude or latitude axis" */
   public static final int AST__WCSAX;
   static {
       try { AST__WCSAX = getErrConst( "AST__WCSAX" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__WCSAX" );
       }
   }
   /** Status constant for error "too few mapping coordinates" */
   public static final int AST__WCSNC;
   static {
       try { AST__WCSNC = getErrConst( "AST__WCSNC" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__WCSNC" );
       }
   }
   /** Status constant for error "invalid projection parameters" */
   public static final int AST__WCSPA;
   static {
       try { AST__WCSPA = getErrConst( "AST__WCSPA" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__WCSPA" );
       }
   }
   /** Status constant for error "unknown projection type" */
   public static final int AST__WCSTY;
   static {
       try { AST__WCSTY = getErrConst( "AST__WCSTY" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__WCSTY" );
       }
   }
   /** Status constant for error "too many Objects in use at once" */
   public static final int AST__XSOBJ;
   static {
       try { AST__XSOBJ = getErrConst( "AST__XSOBJ" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__XSOBJ" );
       }
   }
   /** Status constant for error "zoom factor invalid" */
   public static final int AST__ZOOMI;
   static {
       try { AST__ZOOMI = getErrConst( "AST__ZOOMI" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ZOOMI" );
       }
   }
   /** Status constant for error "bad coordinate index" */
   public static final int AST__BADCI;
   static {
       try { AST__BADCI = getErrConst( "AST__BADCI" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADCI" );
       }
   }
   /** Status constant for error "FrameSet integrity lost" */
   public static final int AST__ILOST;
   static {
       try { AST__ILOST = getErrConst( "AST__ILOST" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ILOST" );
       }
   }
   /** Status constant for error "error in IntraMap transformation function" */
   public static final int AST__ITFER;
   static {
       try { AST__ITFER = getErrConst( "AST__ITFER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ITFER" );
       }
   }
   /** Status constant for error "IntraMap transformation function name invalid" */
   public static final int AST__ITFNI;
   static {
       try { AST__ITFNI = getErrConst( "AST__ITFNI" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ITFNI" );
       }
   }
   /** Status constant for error "Mapping bounding box not found" */
   public static final int AST__MBBNF;
   static {
       try { AST__MBBNF = getErrConst( "AST__MBBNF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MBBNF" );
       }
   }
   /** Status constant for error "multiple registration of IntraMap transformation function" */
   public static final int AST__MRITF;
   static {
       try { AST__MRITF = getErrConst( "AST__MRITF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MRITF" );
       }
   }
   /** Status constant for error "Object class unknown" */
   public static final int AST__OCLUK;
   static {
       try { AST__OCLUK = getErrConst( "AST__OCLUK" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__OCLUK" );
       }
   }
   /** Status constant for error "error while unformatting a coordinate value" */
   public static final int AST__UNFER;
   static {
       try { AST__UNFER = getErrConst( "AST__UNFER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__UNFER" );
       }
   }
   /** Status constant for error "unregistered IntraMap transformation function" */
   public static final int AST__URITF;
   static {
       try { AST__URITF = getErrConst( "AST__URITF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__URITF" );
       }
   }
   /** Status constant for error "grid bounds invalid" */
   public static final int AST__GBDIN;
   static {
       try { AST__GBDIN = getErrConst( "AST__GBDIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__GBDIN" );
       }
   }
   /** Status constant for error "number of grid dimensions invalid" */
   public static final int AST__NGDIN;
   static {
       try { AST__NGDIN = getErrConst( "AST__NGDIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NGDIN" );
       }
   }
   /** Status constant for error "positional accuracy tolerance invalid" */
   public static final int AST__PATIN;
   static {
       try { AST__PATIN = getErrConst( "AST__PATIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PATIN" );
       }
   }
   /** Status constant for error "sub-pixel interpolation scheme invalid" */
   public static final int AST__SISIN;
   static {
       try { AST__SISIN = getErrConst( "AST__SISIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__SISIN" );
       }
   }
   /** Status constant for error "scale size in pixels invalid" */
   public static final int AST__SSPIN;
   static {
       try { AST__SSPIN = getErrConst( "AST__SSPIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__SSPIN" );
       }
   }
   /** Status constant for error "error in user-supplied sub-pixel interpolation function" */
   public static final int AST__UINER;
   static {
       try { AST__UINER = getErrConst( "AST__UINER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__UINER" );
       }
   }
   /** Status constant for error "error in user-supplied 1-d sub-pixel interpolation kernel" */
   public static final int AST__UK1ER;
   static {
       try { AST__UK1ER = getErrConst( "AST__UK1ER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__UK1ER" );
       }
   }
   /** Status constant for error "invalid comma in expression" */
   public static final int AST__COMIN;
   static {
       try { AST__COMIN = getErrConst( "AST__COMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__COMIN" );
       }
   }
   /** Status constant for error "invalid constant in expression" */
   public static final int AST__CONIN;
   static {
       try { AST__CONIN = getErrConst( "AST__CONIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__CONIN" );
       }
   }
   /** Status constant for error "duplicate variable name" */
   public static final int AST__DUVAR;
   static {
       try { AST__DUVAR = getErrConst( "AST__DUVAR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__DUVAR" );
       }
   }
   /** Status constant for error "invalid number of transformation functions" */
   public static final int AST__INNTF;
   static {
       try { AST__INNTF = getErrConst( "AST__INNTF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__INNTF" );
       }
   }
   /** Status constant for error "missing or invalid operand in expression" */
   public static final int AST__MIOPA;
   static {
       try { AST__MIOPA = getErrConst( "AST__MIOPA" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MIOPA" );
       }
   }
   /** Status constant for error "missing or invalid operator in expression" */
   public static final int AST__MIOPR;
   static {
       try { AST__MIOPR = getErrConst( "AST__MIOPR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MIOPR" );
       }
   }
   /** Status constant for error "missing variable name" */
   public static final int AST__MISVN;
   static {
       try { AST__MISVN = getErrConst( "AST__MISVN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MISVN" );
       }
   }
   /** Status constant for error "missing left parenthesis in expression" */
   public static final int AST__MLPAR;
   static {
       try { AST__MLPAR = getErrConst( "AST__MLPAR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MLPAR" );
       }
   }
   /** Status constant for error "missing right parenthesis in expression" */
   public static final int AST__MRPAR;
   static {
       try { AST__MRPAR = getErrConst( "AST__MRPAR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MRPAR" );
       }
   }
   /** Status constant for error "missing right hand side in function" */
   public static final int AST__NORHS;
   static {
       try { AST__NORHS = getErrConst( "AST__NORHS" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NORHS" );
       }
   }
   /** Status constant for error "undefined variable or function in expression" */
   public static final int AST__UDVOF;
   static {
       try { AST__UDVOF = getErrConst( "AST__UDVOF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__UDVOF" );
       }
   }
   /** Status constant for error "variable name invalid" */
   public static final int AST__VARIN;
   static {
       try { AST__VARIN = getErrConst( "AST__VARIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__VARIN" );
       }
   }
   /** Status constant for error "wrong number of function arguments in expression" */
   public static final int AST__WRNFA;
   static {
       try { AST__WRNFA = getErrConst( "AST__WRNFA" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__WRNFA" );
       }
   }
   /** Status constant for error "invalid units specification" */
   public static final int AST__BADUN;
   static {
       try { AST__BADUN = getErrConst( "AST__BADUN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADUN" );
       }
   }
   /** Status constant for error "no rest frequency is defined" */
   public static final int AST__NORSF;
   static {
       try { AST__NORSF = getErrConst( "AST__NORSF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NORSF" );
       }
   }
   /** Status constant for error "no standard of rest is defined" */
   public static final int AST__NOSOR;
   static {
       try { AST__NOSOR = getErrConst( "AST__NOSOR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOSOR" );
       }
   }
   /** Status constant for error "invalid SpecMap" */
   public static final int AST__SPCIN;
   static {
       try { AST__SPCIN = getErrConst( "AST__SPCIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__SPCIN" );
       }
   }
   /** Status constant for error "invalid XML name or prefix" */
   public static final int AST__XMLNM;
   static {
       try { AST__XMLNM = getErrConst( "AST__XMLNM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__XMLNM" );
       }
   }
   /** Status constant for error "invalid XML comment text" */
   public static final int AST__XMLCM;
   static {
       try { AST__XMLCM = getErrConst( "AST__XMLCM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__XMLCM" );
       }
   }
   /** Status constant for error "invalid XML processing instruction target text" */
   public static final int AST__XMLPT;
   static {
       try { AST__XMLPT = getErrConst( "AST__XMLPT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__XMLPT" );
       }
   }
   /** Status constant for error "invalid XML content item index" */
   public static final int AST__XMLIT;
   static {
       try { AST__XMLIT = getErrConst( "AST__XMLIT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__XMLIT" );
       }
   }
   /** Status constant for error "supplied XML document is not well formed" */
   public static final int AST__XMLWF;
   static {
       try { AST__XMLWF = getErrConst( "AST__XMLWF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__XMLWF" );
       }
   }
   /** Status constant for error "Range of log axis scale includes zero" */
   public static final int AST__ZERAX;
   static {
       try { AST__ZERAX = getErrConst( "AST__ZERAX" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ZERAX" );
       }
   }
   /** Status constant for error "Invalid parameters for offset sky coordinate system" */
   public static final int AST__BADOC;
   static {
       try { AST__BADOC = getErrConst( "AST__BADOC" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADOC" );
       }
   }
   /** Status constant for error "error getting a named value from a KeyMap" */
   public static final int AST__MPGER;
   static {
       try { AST__MPGER = getErrConst( "AST__MPGER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MPGER" );
       }
   }
   /** Status constant for error "invalid integer index supplied for a KeyMap entry" */
   public static final int AST__MPIND;
   static {
       try { AST__MPIND = getErrConst( "AST__MPIND" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MPIND" );
       }
   }
   /** Status constant for error "region cannot be re-centred" */
   public static final int AST__REGCN;
   static {
       try { AST__REGCN = getErrConst( "AST__REGCN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__REGCN" );
       }
   }
   /** Status constant for error "attribute has no usable value" */
   public static final int AST__NOVAL;
   static {
       try { AST__NOVAL = getErrConst( "AST__NOVAL" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOVAL" );
       }
   }
   /** Status constant for error "incompatible time scales" */
   public static final int AST__INCTS;
   static {
       try { AST__INCTS = getErrConst( "AST__INCTS" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__INCTS" );
       }
   }
   /** Status constant for error "invalid TimeMap" */
   public static final int AST__TIMIN;
   static {
       try { AST__TIMIN = getErrConst( "AST__TIMIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__TIMIN" );
       }
   }
   /** Status constant for error "cannot use supplied AstroCoords info" */
   public static final int AST__STCKEY;
   static {
       try { AST__STCKEY = getErrConst( "AST__STCKEY" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__STCKEY" );
       }
   }
   /** Status constant for error "invalid AstroCoords index" */
   public static final int AST__STCIND;
   static {
       try { AST__STCIND = getErrConst( "AST__STCIND" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__STCIND" );
       }
   }
   /** Status constant for error "cannot conserve flux whilst resampling an array of data" */
   public static final int AST__CNFLX;
   static {
       try { AST__CNFLX = getErrConst( "AST__CNFLX" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__CNFLX" );
       }
   }
   /** Status constant for error "Unknown AST tuning parameter name supplied" */
   public static final int AST__TUNAM;
   static {
       try { AST__TUNAM = getErrConst( "AST__TUNAM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__TUNAM" );
       }
   }
   /** Status constant for error "Bad value supplied for a public function parameter" */
   public static final int AST__BDPAR;
   static {
       try { AST__BDPAR = getErrConst( "AST__BDPAR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BDPAR" );
       }
   }
   /** Status constant for error "Supplied FrameSet does not contain any independent axes" */
   public static final int AST__3DFSET;
   static {
       try { AST__3DFSET = getErrConst( "AST__3DFSET" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__3DFSET" );
       }
   }
   /** Status constant for error "Attempt to delete original Plot3D base Frame" */
   public static final int AST__PXFRRM;
   static {
       try { AST__PXFRRM = getErrConst( "AST__PXFRRM" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__PXFRRM" );
       }
   }
   /** Status constant for error "Illegal syntax for string substitution template" */
   public static final int AST__BADSUB;
   static {
       try { AST__BADSUB = getErrConst( "AST__BADSUB" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADSUB" );
       }
   }
   /** Status constant for error "Incompatible flags for re-sampling or re-binning" */
   public static final int AST__BADFLG;
   static {
       try { AST__BADFLG = getErrConst( "AST__BADFLG" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADFLG" );
       }
   }
   /** Status constant for error "Error locking or unlocking an AST Object" */
   public static final int AST__LCKERR;
   static {
       try { AST__LCKERR = getErrConst( "AST__LCKERR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__LCKERR" );
       }
   }
   /** Status constant for error "FITS keyword had undefined value" */
   public static final int AST__FUNDEF;
   static {
       try { AST__FUNDEF = getErrConst( "AST__FUNDEF" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__FUNDEF" );
       }
   }
   /** Status constant for error "invalid integer index supplied for a KeyMap vector element" */
   public static final int AST__MPVIN;
   static {
       try { AST__MPVIN = getErrConst( "AST__MPVIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MPVIN" );
       }
   }
   /** Status constant for error "operation specifier invalid" */
   public static final int AST__OPRIN;
   static {
       try { AST__OPRIN = getErrConst( "AST__OPRIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__OPRIN" );
       }
   }
   /** Status constant for error "no inside point found" */
   public static final int AST__NONIN;
   static {
       try { AST__NONIN = getErrConst( "AST__NONIN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NONIN" );
       }
   }
   /** Status constant for error "requested key not found in KeyMap" */
   public static final int AST__MPKER;
   static {
       try { AST__MPKER = getErrConst( "AST__MPKER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MPKER" );
       }
   }
   /** Status constant for error "error putting a named value into a KeyMap" */
   public static final int AST__MPPER;
   static {
       try { AST__MPPER = getErrConst( "AST__MPPER" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__MPPER" );
       }
   }
   /** Status constant for error "Attempt made to add an entry to a locked KeyMap" */
   public static final int AST__BADKEY;
   static {
       try { AST__BADKEY = getErrConst( "AST__BADKEY" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADKEY" );
       }
   }
   /** Status constant for error "Bad data type" */
   public static final int AST__BADTYP;
   static {
       try { AST__BADTYP = getErrConst( "AST__BADTYP" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADTYP" );
       }
   }
   /** Status constant for error "Column already exists with different properties" */
   public static final int AST__OLDCOL;
   static {
       try { AST__OLDCOL = getErrConst( "AST__OLDCOL" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__OLDCOL" );
       }
   }
   /** Status constant for error "Bad null value for a FITS table column" */
   public static final int AST__BADNULL;
   static {
       try { AST__BADNULL = getErrConst( "AST__BADNULL" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADNULL" );
       }
   }
   /** Status constant for error "Key string is too long" */
   public static final int AST__BIGKEY;
   static {
       try { AST__BIGKEY = getErrConst( "AST__BIGKEY" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BIGKEY" );
       }
   }
   /** Status constant for error "No such column exists in the table" */
   public static final int AST__BADCOL;
   static {
       try { AST__BADCOL = getErrConst( "AST__BADCOL" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADCOL" );
       }
   }
   /** Status constant for error "Table is too large" */
   public static final int AST__BIGTAB;
   static {
       try { AST__BIGTAB = getErrConst( "AST__BIGTAB" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BIGTAB" );
       }
   }
   /** Status constant for error "Invalid array size" */
   public static final int AST__BADSIZ;
   static {
       try { AST__BADSIZ = getErrConst( "AST__BADSIZ" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADSIZ" );
       }
   }
   /** Status constant for error "Error reading WCS from FITS binary table" */
   public static final int AST__BADTAB;
   static {
       try { AST__BADTAB = getErrConst( "AST__BADTAB" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__BADTAB" );
       }
   }
   /** Status constant for error "Cannot access FITS binary table" */
   public static final int AST__NOTAB;
   static {
       try { AST__NOTAB = getErrConst( "AST__NOTAB" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOTAB" );
       }
   }
   /** Status constant for error "Error in levmar Levenberg-Marquardt code" */
   public static final int AST__LEVMAR;
   static {
       try { AST__LEVMAR = getErrConst( "AST__LEVMAR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__LEVMAR" );
       }
   }
   /** Status constant for error "Fit failed" */
   public static final int AST__NOFIT;
   static {
       try { AST__NOFIT = getErrConst( "AST__NOFIT" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__NOFIT" );
       }
   }
   /** Status constant for error "A transformation generated one or more NaN values" */
   public static final int AST__ISNAN;
   static {
       try { AST__ISNAN = getErrConst( "AST__ISNAN" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__ISNAN" );
       }
   }
   /** Status constant for error "write error" */
   public static final int AST__WRERR;
   static {
       try { AST__WRERR = getErrConst( "AST__WRERR" ); }
       catch( IllegalArgumentException e ) {
           throw new LinkageError(
                "Unknown AST error constant AST__WRERR" );
       }
   }
}
